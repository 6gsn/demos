{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-b5f60b1eb4b7ba202fba.js","mappings":"uNAkCA,EAXiB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,MAClB,GAA+BC,EAAAA,EAAAA,KAA/B,EAAQC,SAAR,EAAkBC,UACIC,EAAAA,EAAAA,KAAdC,UAER,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAD,MACED,EAAAA,EAAAA,IAACE,EAAAA,EAAD,CAASR,MAAOA,EAAOS,UAAU,MC1BvC,MCQe,YAAuD,IAAjBC,EAAgB,oBAEzDC,EACND,EADFE,KAAQD,QAGV,OAAOE,EAAAA,cAACC,EAAD,eAAUd,MAAOW,EAAQI,OAAWL,M,kWCF7C,IAiBA,EAjBiB,SAAC,GAAyB,IAAvBM,EAAsB,EAAtBA,KAClB,GAA+Bf,EAAAA,EAAAA,KAAvBgB,EAAR,EAAQA,SAAUf,EAAlB,EAAkBA,SAElB,OACEI,EAAAA,EAAAA,IAACO,EAAAA,SAAD,KACGG,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACRd,EAAAA,EAAAA,IAACO,EAAAA,SAAD,CAAgBQ,IAAKF,EAAIG,QACpBF,GAAF,MACDd,EAAAA,EAAAA,IAACiB,EAAAA,KAAD,CAAMC,GAAI,SAACC,GAAD,a,qWAAA,cAAaA,EAAEC,cAAf,aAAaC,EAAUC,IAAMC,IAAIC,EAAAA,EAAAA,GAAe,IAAI5B,EAAL,IAAiBe,EAAjB,IAA6BE,EAAIG,OACvFH,EAAIY,Y,qkBCDjB,IAiBA,EAjBqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASvB,SAAAA,OAAT,gBACnBH,EAAAA,EAAAA,IAAC2B,EAAAA,GAAD,CAAKC,GAAI,IACP5B,EAAAA,EAAAA,IAACiB,EAAAA,KAAD,CAAMM,GAAIG,EAAKV,KAAME,GAAI,SAACC,GAAD,eAAC,KAAD,QAAC,EAAYA,EAAEC,cAAf,aAAaC,EAAUC,GAAvB,IAA0BO,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAM,WAC3EJ,EAAKK,QAER/B,EAAAA,EAAAA,IAAAA,IAAAA,CAAGkB,GAAI,CAAEY,MAAM,YAAcE,GAAI,EAAGV,EAAG,CAAEQ,MAAM,aAAgBD,SAAU,CAAC,EAAG,EAAG,MAC9E7B,EAAAA,EAAAA,IAAAA,OAAAA,KAAO0B,EAAKO,MACXP,EAAKhB,MAAQP,IACZH,EAAAA,EAAAA,IAACO,EAAAA,SAAD,YAEEP,EAAAA,EAAAA,IAACkC,EAAD,CAAUxB,KAAMgB,EAAKhB,WCH/B,EARgB,SAAC,GAAD,IAAGhB,EAAH,EAAGA,MAAH,IAAUyC,UAAAA,OAAV,eAA0BhC,SAAAA,OAA1B,gBACdH,EAAAA,EAAAA,IAAAA,UAAAA,CAASkB,GAAI,CAAEU,GAAI,CAAC,EAAG,EAAG,IAAMO,UAAWA,GACxCzC,EAAMkB,KAAI,SAACc,GAAD,OACT1B,EAAAA,EAAAA,IAACoC,EAAD,CAAcrB,IAAKW,EAAKV,KAAMU,KAAMA,EAAMvB,SAAUA","sources":["webpack://demos/./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack://demos/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://demos/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://demos/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://demos/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://demos/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <Listing posts={posts} showTags={false} />\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["posts","useMinimalBlogConfig","basePath","blogPath","useSiteMetadata","siteTitle","jsx","Layout","Listing","showTags","props","allPost","data","React","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","Link","sx","t","styles","_t$styles","a","to","replaceSlashes","name","post","Box","mb","fontSize","color","title","mt","date","ItemTags","className","BlogListItem"],"sourceRoot":""}